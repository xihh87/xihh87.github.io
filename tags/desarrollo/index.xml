<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Desarrollo on Joshua Haase</title><link>https://joshua.haase.mx/tags/desarrollo/</link><description>Recent content in Desarrollo on Joshua Haase</description><generator>Hugo</generator><language>es-mx</language><lastBuildDate>Sat, 11 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://joshua.haase.mx/tags/desarrollo/index.xml" rel="self" type="application/rss+xml"/><item><title>Model Driven Architecture no evolucionó, los lenguajes sí.</title><link>https://joshua.haase.mx/techno/uml-based-vs-programming-languages/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://joshua.haase.mx/techno/uml-based-vs-programming-languages/</guid><description>Escuchando la clase de Yegor acerca de UML, me da la impresión de que siempre tuvimos el mismo sueño:
Y a pesar de que programar se ha vuelto mucho más sencillo porque ahora no tenemos que entender:
el funcionamiento interno del hardware (binario), las instrucciones específicas del microprocesador (ensamblador), o cuidar:
el flujo de ejecución (GOTO) el manejo de la memoria (C) la gestión de los hilos (Go, Rust) Hay una diferencia entre el diseñar todo el sistema esperando que funcione, y resolver el problema inmediato, iterando poco a poco.</description></item></channel></rss>